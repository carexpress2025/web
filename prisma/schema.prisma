// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  name             String
  UserAccounts     UserAccount?
  UserSubscription UserSubscription?

  @@map("users")
}

model Account {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String
  UserAccounts UserAccount?

  @@map("accounts")
}

model UserAccount {
  id        Int      @id @default(autoincrement())
  userId    Int?     @unique
  user      User?    @relation(fields: [userId], references: [id])
  accountId Int?     @unique
  account   Account? @relation(fields: [accountId], references: [id])

  @@map("users_accounts")
}

model Subscription {
  id               Int                @id @default(autoincrement())
  name             String             @unique
  UserSubscription UserSubscription[]

  @@map("subscriptions")
}

model UserSubscription {
  id             Int          @id @default(autoincrement())
  userId         Int          @unique
  user           User         @relation(fields: [userId], references: [id])
  subscriptionId Int
  subscription   Subscription @relation(fields: [subscriptionId], references: [id])

  @@map("users_subscriptions")
}

model Cars {
  id                    Int      @id @default(autoincrement())
  brand                 String?
  name                  String?
  bodyType              String?
  painting              String?
  carType               String?
  driveType             String?
  transmissionType      String?
  color                 String?
  mileage               Int?
  engine                String?
  engineDisplacement    Int?
  fuelType              String?
  safety                Json?
  interior              Json?
  electronics           Json?
  owners                String?
  status                String?
  year                  Int?
  inspected             String?
  plate                 String?
  additionalInformation String?
  others                String?
  roadWorthy            String?
  price                 Float?
  images                String[]
  phone                 String?
  seller                String?
  link                  String?

  @@map("cars")
}

model Scheduling {
  id      Int    @id @default(autoincrement())
  name    String
  filters Json
  message String

  @@map("schedulings")
}
