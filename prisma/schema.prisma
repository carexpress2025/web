// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Users {
    id              String           @id @default(auto()) @map("_id") @db.ObjectId
    name            String
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt
    UserAccounts    UserAccounts?
    UserSchedulings UserSchedulings?

    @@map("users")
}

model Accounts {
    id           String        @id @default(auto()) @map("_id") @db.ObjectId
    email        String        @unique
    password     String
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    UserAccounts UserAccounts?

    @@map("accounts")
}

model UserAccounts {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    userId    String?   @unique @db.ObjectId
    user      Users?    @relation(fields: [userId], references: [id])
    accountId String?   @unique @db.ObjectId
    account   Accounts? @relation(fields: [accountId], references: [id])
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    @@map("users_accounts")
}

model Schedulings {
    id              String             @id @default(auto()) @map("_id") @db.ObjectId
    name            String
    filters         Json
    message         String
    status          SCHEDULINGS_STATUS @default(PENDING)
    createdAt       DateTime           @default(now())
    updatedAt       DateTime           @updatedAt
    UserSchedulings UserSchedulings?

    @@map("schedulings")
}

model UserSchedulings {
    id           String      @id @default(auto()) @map("_id") @db.ObjectId
    userId       String      @unique @db.ObjectId
    user         Users       @relation(fields: [userId], references: [id])
    schedulingId String      @unique @db.ObjectId
    scheduling   Schedulings @relation(fields: [schedulingId], references: [id])
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt

    @@map("users_schedulings")
}

enum SCHEDULINGS_STATUS {
    RUNNING
    PENDING
    FAILED
    STOPPED
}
